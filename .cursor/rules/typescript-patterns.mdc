# TypeScript Patterns for Module System

## Module Function Signature

Always use this exact signature for module functions:

```typescript
export default function (element: HTMLElement, dataset: DOMStringMap) {
  // Module implementation
}
```

## Import Patterns

- Always import lifecycle hooks from `@/modules/_`
- Use `@/lib/` for utility libraries
- Use `@utils/` for utility functions

## Type Safety

- Use proper TypeScript types for all parameters
- Define interfaces for complex configurations
- Use `DOMStringMap` for dataset access
- Use `HTMLElement` for element typing

## Common Patterns

```typescript
// GSAP animations
import gsap from "@lib/gsap";

// State management
import State from "@lib/hey";

// Utility functions
import { clientRect } from "@utils/client-rect";
import { clamp, map } from "@utils/math";
```

## Error Handling

- Wrap module initialization in try-catch
- Use console.warn for non-critical errors
- Return null for failed module loads
